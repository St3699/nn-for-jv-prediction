function [V, I, Voc, Ioc, Vsc, Isc, Vmpp, Impp, FF, Rseries, Rshunt] = extractPOI(V, I)

% extract open circuit voltage
[I_unique, idx_unique] = unique(I);
V_unique = V(idx_unique);
Voc = interp1(I_unique, V_unique, 0, 'pchip', 'extrap'); 
Ioc = 0;
V = sort([V, Voc]);
I = sort([I, Ioc], "descend");

% extract short circuit current
% [~, idx_isc] = min(abs(V));
[~, idx_isc] = find(V == 0, 1, 'first');
Isc = I(idx_isc);
Vsc = V(idx_isc);

% extract maximum power point
V_fine = linspace(min(V), max(V), 200);  % Create a fine voltage grid
I_fine = interp1(V, I, V_fine, 'pchip');
P = V_fine .* I_fine; 
dP_dV = gradient(P, V_fine);
% Find where dP/dV crosses zero
z = find(diff(sign(dP_dV)) ~= 0, 1, 'first');
Vmpp = interp1(dP_dV(z:z+1), V_fine(z:z+1), 0, 'linear');
Impp = interp1(V, I, Vmpp, 'pchip');  % Interpolate I at Vmpp
V = sort([V, Vmpp]);
I = sort([I, Impp], "descend");

% % Plot the gradient
% figure;
% plot(V_fine, dP_dV);  % Plot the gradient curve
% hold on; plot(V_fine, P);
% plot(Vmpp, 0, 'ro', 'MarkerSize', 8, 'LineWidth', 2);  % Highlight the MPP (where gradient is zero)
% xlabel('Voltage (V)');
% ylabel('dP/dV');
% title('Gradient of Power with Respect to Voltage');
% grid on;
% legend('dP/dV', 'Maximum Power Point (MPP)');
% hold off;

% calculate fill factor
FF = (Vmpp * Impp) / (Voc * Isc);

% Calculate Series Resistance (Rseries)
Rseries = (Voc - Vmpp)/ Isc; 
% might be wrong

% Calculate Shunt Resistance (Rshunt) using the formula
% Rshunt = - (dV/dI) at I = Isc
dV_dI = gradient(V, I);  % Derivative of Voltage with respect to Current
Rshunt = -dV_dI(idx_isc);  % Evaluate the derivative at I = Isc
if abse(Rshunt)== Inf


% Plot the gradient
figure;
plot(V, dV_dI);  % Plot the gradient curve
hold on;
plot(0, dV_dI(idx_isc), 'ro', 'MarkerSize', 8, 'LineWidth', 2);  % Highlight the MPP (where gradient is zero)
xlabel('Voltage (V)');
ylabel('dV/dI');
title('Gradient of V with Respect to I');
grid on;
legend('dV/dI');

end